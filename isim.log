ISim log file
Running: /home/nirala/Documents/grive/codes/Autumn2018/5thSem/COA/Spartan/KGP_Risc/G9_TB_isim_beh.exe -intstyle ise -gui -tclbatch isim.cmd -wdb /home/nirala/Documents/grive/codes/Autumn2018/5thSem/COA/Spartan/KGP_Risc/G9_TB_isim_beh.wdb 
ISim P.20131013 (signature 0xfbc00daa)
----------------------------------------------------------------------
INFO:Security:51 - The XILINXD_LICENSE_FILE environment variable is not set.
INFO:Security:53 - The LM_LICENSE_FILE environment variable is not set.
INFO:Security:68a - user is nirala, on host unknown.
WARNING:Security:43 - No license file was found in the standard Xilinx license directory.
WARNING:Security:44 - Since no license file was found,
       please run the Xilinx License Configuration Manager
       (xlcm or "Manage Xilinx Licenses")
       to assist in obtaining a license.
ERROR:Security:14 - No feature was available for 'ISIM'.

No such feature exists.
Feature:       ISIM
License path:  /home/nirala/.Xilinx/*.lic:/opt/Xilinx/14.7/ISE_DS/ISE//data/*.lic:/opt/Xilinx/14.7/ISE_DS/ISE//coregen/core_licenses/Xilinx.lic:/opt/Xilinx/14.7/ISE_DS/ISE//coregen/core_licenses/XilinxFree.lic:/opt/Xilinx/14.7/ISE_DS/EDK/data/core_licenses/Xilinx.lic:
FLEXnet Licensing error:-5,357
For further information, refer to the FLEXnet Licensing documentation,
available at "www.flexerasoftware.com".
----------------------------------------------------------------------
WARNING: A full ISim License cannot be checked out due to the issues listed above. Please use Xilinx License Configuration Manager to fix these issues in order to check out a full ISim license.
WARNING: ISim will run in Lite mode. Please refer to the ISim documentation for more information on the differences between the Lite and the Full version.
This is a Lite version of ISim.
WARNING: File "/home/nirala/Documents/grive/codes/Autumn2018/5thSem/COA/Spartan/KGP_Risc/G9Processor.v" Line 40.  For instance uut/IMem/, width 5 of formal port addra is not equal to width 32 of actual signal pc.
Time resolution is 1 ps
# onerror resume
# wave add /
# run 1000 ns
Simulator is doing circuit initialization process.
Block Memory Generator CORE Generator module G9_TB.uut.IMem.inst.\native_mem_module.blk_mem_gen_v7_3_inst  is using a behavioral model for simulation which will not precisely model memory collision behavior.
Finished circuit initialization process.
                   0: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000000 
                   0: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
                   0: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
                   0: imm: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
                   0: AluOp: 000 
                   0: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
                   0: PC_NXT: 00000000000000000000000000000001 
                   0: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                   0: Read Values1 RF( 0)  00000000000000000000000000000000 
                   0: Read Values2 RF( 0)  00000000000000000000000000000000 
                   0: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
                   0: ALUOP  000  0 
              100000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000001 
              100000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              100000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              100000: imm: 00000000000000000000000000000000 
              100000: AluOp: 000 
              100000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              100000: PC_NXT: 00000000000000000000000000000010 
              100000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              100000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              100000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              200000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000001 
              200000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              200000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              200000: imm: 00000000000000000000000000000000 
              200000: AluOp: 000 
              200000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              200000: PC_NXT: 00000000000000000000000000000010 
              200000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              200000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              200000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              300000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000010 
              300000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              300000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              300000: imm: 00000000000000000000000000000000 
              300000: AluOp: 000 
              300000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              300000: PC_NXT: 00000000000000000000000000000011 
              300000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              300000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              300000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              400000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000010 
              400000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              400000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              400000: imm: 00000000000000000000000000000000 
              400000: AluOp: 000 
              400000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              400000: PC_NXT: 00000000000000000000000000000011 
              400000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              400000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              400000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              600000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000011 
              600000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              600000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              600000: imm: 00000000000000000000000000000000 
              600000: AluOp: 000 
              600000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              600000: PC_NXT: 00000000000000000000000000000100 
              600000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              600000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              600000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              700000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000011 
              700000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              700000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              700000: imm: 00000000000000000000000000000000 
              700000: AluOp: 000 
              700000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              700000: PC_NXT: 00000000000000000000000000000100 
              700000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              700000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              700000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              800000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000100 
              800000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              800000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              800000: imm: 00000000000000000000000000000000 
              800000: AluOp: 000 
              800000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              800000: PC_NXT: 00000000000000000000000000000101 
              800000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              800000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              800000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              900000: IMem :00000000000000000000000000000000   PC: 00000000000000000000000000000100 
              900000: rs(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              900000: rt(00000): xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              900000: imm: 00000000000000000000000000000000 
              900000: AluOp: 000 
              900000: ALUResult  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx           x 
              900000: PC_NXT: 00000000000000000000000000000101 
              900000: Write_reg 1 Write Data xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
              900000: Read Values1 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
              900000: Read Values2 RF( 0)  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
# exit 0
