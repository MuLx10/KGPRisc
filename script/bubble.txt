xor $s0,$s0
xor $s1,$s1
xor $s2,$s2
xor $s3,$s3
xor $s4,$s4
xor $s5,$s5
xor $s6,$s6
xor $s7,$s7
## Elements of array
addi $s0,2
addi $s1,78
addi $s2,25
addi $s3,11
addi $s4,96
addi $s5,15
addi $s6,45
addi $s7,10
xor $a1,$a1
sw $s0, 0($a1)             # store elems in mem
sw $s1, 1($a1)
sw $s2, 2($a1)
sw $s3, 3($a1)
sw $s4, 4($a1)
sw $s5, 5($a1)
sw $s6, 6($a1)
sw $s7, 7($a1)
## function  params ##
xor $a0,$a0
addi $a0,7                 # num of elemts - 1 
xor $a1,$a1                # base address of array in mem
######################
# BUBBLE SORT Starts #
######################
comp $s1,$a0               
xor $t0,$t0                # OUTER LOOP Begins
add $t0,$a1                # ptr to base address
xor $t1,$t1
add $t0,$zero              # INNER LOOP Begins
lw $t2, 1($t0) 
lw $t3, 0($t0)
xor $t4,$t4
add $t4,$t2
comp $t5,$t3
add $t4,$t5
bns 4                      # branch NO_SWAP
sw $t2, 0($t0)
sw $t3, 1($t0)
xor $t1,$t1
addi $t1,1
addi $t0,1                 # NO_SWAP
xor $t6,$t6
add $t6,$t0
add $t6,$s1
bs -17                     # branch INNER LOOP
add $t1,$zero
bnz -22                    # branch OUTER LOOP
####################
# BUBBLE SORT Ends #
####################
lw $t0, 0($a1)             #load result elems
lw $t1, 1($a1)
lw $t2, 2($a1)
lw $t3, 3($a1)
lw $t4, 4($a1)
lw $t5, 5($a1)
lw $t6, 6($a1)
lw $t7, 7($a1)
add $t0,$zero
add $t1,$zero
add $t2,$zero
add $t3,$zero
add $t4,$zero
add $t5,$zero
add $t6,$zero
add $t7,$zero